### 링크

https://silk-vanilla-48e.notion.site/2-23df22fbe5c180f8b514f81a75a39c61?source=copy_link


## 서론, 사람의 객체 인식

---

책에서는 아이의 사고 실험을 통해서 사람은 태어난 지 얼마 안 된 시기부터 뚜렷한 **경계를** 가지고 **함께 행동하는 물체를** 하나의 **개념으로 인지**한다는 의미를 보여준다.

### **객체지향을 현실 세계의 모방 혹은 추상화라고 부르는 이유**

인간은 본능적으로 세상을 독립적이고 식별 가능한 객체의 집합으로 바라본다. 

많은 사람들이 객체지향을 직관적이고 이해하기 쉬운 패러다임이라고 말하는 이유는 객체지향이 세상을 자율적이고 독립적인 객체들로 분해할 수 있는 인간의 기본적인 인지 능력에 기반을 두기 때문이다.

인간은 물리적인 형태가 있는 사물부터 논리적인 개념까지 객체로 인지할 수 있다

### 객체지향은 모방이 아닌 창조이다

현실 세계의 객체와 소프트웨어 세상의 객체의 유사성은 크지 않다.

현실 세계의 영수증은 자기 결제 내역을 정산해주는 기능이나, 통장이 스스로 금액을 인출하는 상상을 하기 힘들다. 

마치, 이상한 나라의 엘리스 만큼 낯설고 기묘할 것이다.

## 객체, 그리고 이상한 나라

---

### 이상한 나라의 앨리스

책에서는 앨리스가 토끼를 쫒아 마주한 **40cm 조그만 문을 통과하기** 위해 몸을 작아지게 하는 **음료를 마신다**던가, 커졌다 작아졌다 할 수 있는 **버섯을 먹는다**던가 하는 여러 동작을 수행하여 40cm 의 문을 통과하는 과정을 묘사한다.

### 앨리스 객체

문을 통과한다라는 행동을 하기에 적당한 키가 되기 위해 키를 변경하는 음료를 마신다던가 버섯을 먹는다던가 하는 **행동을 수반한다.**

행동을 진행하면서 변경되는 **특정 시점의 앨리스의 키를 앨리스의 상태라 말한다.**

결국 앨리스의 키를 변화시키는 것은 앨리스의 **행동이다.**

![image.png](attachment:e6c66b7c-cf2a-45d0-8404-4cc737310f50:image.png)

앨리스라는 객체는 음료를 마신다와 버섯을 먹는다와 같은 행동이 상태를 변화시키고 문을 통과한다의 결과는 상태가 결정하는 등과 같**이 행동의 결과를 결정하는 것 또한 상태이다.**

또한 앨리스는 행동에 의해 앨리스의 상태가 변경되더라도 앨리스가 앨리스라는 사실은 변하지 않는다.

따라서 앨리스는 상태 변경과 무관하게 유일한 존재로 **식별 가능하다.**

### 요약

- 앨리스는 상태를 가지며 상태는 변경 가능하다
- 앨리스의 상태를 변경시키는 것은 앨리스의 행동이다.
    - 행동의 결과는 상태에 의존적이며 상태를 이용해 서술할 수 있다.
    - 행동의 순서가 결과에 영향을 미친다
- 앨리스는 어떤 상태에 있더라도 유일하게 식별 가능하다.

## 객체, 그리고 소프트웨어 나라

---

**“객체의 다양한 특성을 효과적으로 설명하기 위해서는 객체를 상태(state), 행동(behavior), 식별자(identity)를 지닌 실체로 보는 것이 가장 효과적이다.” - Booch**

이 책에서는 객체를 다음과 같이 정의한다.

**객체는 구별가능한 식별자, 특징적인 행동, 변경 가능한 상태를 가진다**

### 상태란

**상태가 왜 필요한가?**

**행동은 결과는 이전의 행동의 순서와 관련이 있을 수 있다.**

앨리스가 문을 통과하기 위해 버섯을 먹고 난 뒤에 예상된 키를 얻을 려면 이전에 먹었던 버섯의 횟수와 음료를 생각해야한다.

문을 통과하기 위해서는 이전의 수행한 행동의 순서를 생각해야한다.

앨리스가 과거에 했던 모든 행동을 기억해야만 가능하기 때문에 행동의 결과를 설명하는 것은 매우 어렵다.

**상태를 이용하면 과거의 모든 행동 이력을 설명하지 않고도 행동의 셜과를 쉽게 예측하고 설명할 수 있다.**

**상태와 프로퍼티**

![image.png](attachment:dc200f21-9400-4968-b52f-a5c13577a9a0:image.png)

객체의 상태를 표현하기 위해서는 숫자, 문자열, 불리안 같이 변하지 않는 상수값 부터 앨리스가 가지는 음료처럼 다른 객체를 가질 수 있다.

모든 객체의 상태는 단순한 값과 객체의 조합으로 표현할 수 있다. 이때 객체의 상태를 구성하는 특징을 통틀어 **프로퍼티(property)**라고 한다

**일반적으로 프로퍼티는 정적이다 반면 프로퍼티 값(property value)은 시간이 흐름에 따라 변경되기 때문에 동적이다.**

**프로퍼티 = 링크 + 속성**

![image.png](attachment:9e5e8685-585b-461d-8abe-0fec44850b72:image.png)

- **링크** : 객체와 객체 사이의 의미있는 연결
    
    객체의 링크를 통해서만 메시지를 주고받을 수 있다
    
- **속성(attribute)** : 객체 간의 선으로 표현되는 링크와 달리 객체를 구성하는 단순한 값은

**상태와 객체의 자율성**

객체와 객체 사이에서 다른 객체의 상태를 직접 건드릴 수 없다.

객체와 객체 사이에서 객체의 상태를 제어하기 위해서는 행동으로 하여금 간접적으로 변경하는 것을 가능하게 한다.

**객체는 스스로의 행동에 의해서만 상태가 변경되는 것을 보장함으로써 객체의 자율성을 유지한다**

### 행동

**상태와 행동**

객체가 취하는 행동은 객체 자신의 상태를 변경시킨다. 객체의 행동에 의해 객체의 상태를 변경된다는 것은 **행동이 부수 효과(side effect)를 초래한다는 것을 의미한다**

- 객체와 행동은 상태에 영향을 받는다.
- 객체의 행동은 상태를 변경시킨다

상태라는 개념을 이용해 행동을 다음의 두 가지 관점에서 서술할 수 있음을 의미한다.

- 상호작용이 현재의 상태에 어떤 방식으로 의존하는가
- 상호작용이 어떻게 현재의 상태를 변경시키는가

**협력과 행동**

**어떤 객체도 섬이 아니다**

객체는 자신에게 주어진 책임을 완수하기 위해 다른 객체를 이용하고 다른 객체에게 서비스를 제공한다

**외부의 요청 또는 수신된 메시지에 응답하기 위해 동작하고 반응하는 활동**이다. 행동의 결과로 객체는 자신의 상태를 변경하거나 다른 객체에게 메시지를 전달할 수 있다. 객체는 행동을 통해 다른 객체와의 협력에 참여하므로 행동은 외부에 가시적이어야 한다.

**상태 캡슐화**

객체는 상태를 감춰둔 채 외부로 노출하지 않는다. 객체가 ***외부에 노출하는 것은 행동***뿐이며, 외부에서 객체에 접근할 수 있는 유일한 방법 역시 행동뿐이다.

외부에 노출한 행동에 의해 상태가 변경되는 것은 오로지 객체의 책임이며 **이러한 캡슐화는 객체의 자율성을 높이고 협력을 단수하고 유연하게 만든다**

### 식별자

객체란 인간의 인지 능력을 이용해 식별 가능한 경계를 가진 모든 사물을 의미한다.

객체가 식별 가능하다는 것은 객체를 서로 구별할 수 있는 특정한 프로퍼티가 객체 안에 존재한다는 것을 의미한다.

**이 프로퍼티를 식별자라고 한다**

**값과 객체의 가장 큰 차이점은 값은 식별자를 가지지 않지만 객체는 식별자를 가진다는 점이다.**

**동등성 (equality)**

- **상태를 이용**해 두 값이 같은지 판단할 수 있는 성질
    - ex) 값(value)은 상태를 비교해 같은지를 판단
    - 값의 상태가 **변하지 않기(immutable)** 때문에 상태를 이용해 **동등성을 판단할 수 있다**

**동일성 (identical)**

- 객체는 시간에 따라 변경되는 가변 상태를 포함한다
    - 따라서, 특정 시점에 두 객체의 상태가 완전히 똑같더라도 두 객체는 별개의 객체로 다뤄야 함
- 두 객체의 상태가 다르더라도 **식별자가 같다면** 두 객체를 같은 객체로 판단할 수 있다 -> 동일성
    - 식별자는 상태 변경에 독립적

객체지향 프로그래밍 언어에서 두 개념 모두 클래스를 이용해 구현되기 때문에 값과 객체의 차이점을 혼란스러워 한다.

**이러한 오해 소지를 줄이기 위해 참조객체 또는 엔티티를 식별자를 지닌 전통적인 의미의 객체. 값 객체는 식별자를 가지지 않는 값을 가리키는 용어로 부른다**

## 행동이 상태를 결정한다

---

상태를 먼저 결정하고 행동을 나중에 결정하는 방법은 설계에 있어서 아래와 같은 나쁜 영향을 끼친다.

1. **상태를 먼저 결정할 경우 캡슐화가 저해된다.**
2. **객체를 협력자가 아닌 고립된 섬으로 만든다.**
3. **객체의 재사용성이 저하된다.**

객체는 다른 객체와 협력하기 위해 존재한다. 객체의 행동은 객체가 협력에 참여하는 유일한 방법이다. 따라서 ***객체가 적합한지를 결정하는 것은 그 객체의 상태가 아니라 행동***이다.

***어떤 책임이 필요한가를 결정하는 과정이 전체 설계를 주도해야 한다.*** 책임 주도 설계는 협력이라는 문맥 안에서 객체의 행동을 생각하도록 도움으로써 응집도 높고 재사용 가능한 객체를 만들 수 있게 한다.

## 은유와 객체

---

많은 사람들이 객체지향을 흔히 현실 세계의 모방 혹은 추상화라고 하지만 객체지향 세계는 현실 세계의 단순한 모방이 아닌 전혀 다른 세계를 의미한다.

**현실 세계와 객체지향 세계의 가장 큰 차이점**은 현실 속에서는 수동적인 존재가 소프트웨어 객체로 구현될 때는 **능동적으로 변한다는 것이다.** 

레베카 워프스브록은 현실의 객체보다 더 많은 일을 할 수 있는 소프트웨어 객체의 특징을 의**인화(anthropomorphism)라고 부른다**

 ****

**은유**

그렇다면 객체지향의 세계와 현실 세계 사이에는 전혀 상관 없는 것인가?

그렇지는 않다. 다만 모방이나 추상화의 수준이 아닌 다른 관점에서 유사성을 가지고 있다.

**현실 세계와 객체지향 세계 사이의 관계를 좀 더 정확하게 설명할 수 있는 단어는 은유(metaphor)다**

**이상한 나라를 창조하라**

객체지향 설계자로서 우리의 목적은 현실을 모방하는 것이 아니다.

단지 이상한 나라를 창조하기만 하면 된다.

현실을 닮아야 한다는 어떤 제약이나 구속도 없다.

창조한 객체의 특성을 사기시킬 수 있다면 현실 속 객체의 이름을 이용해 묘사해도 된다.

그렇지 않다면 우리만의 새로운 세계를 창조하면 된다.
